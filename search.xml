<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>pytest详解-基础知识</title>
      <link href="2020/10/17/hello-world/"/>
      <url>2020/10/17/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="pytest的特点"><a href="#pytest的特点" class="headerlink" title="pytest的特点"></a>pytest的特点</h2><ul><li>pytest是一个非常成熟的全功能的Python测试框架，主要特点有以下几点：</li><li>简单灵活，容易上手；</li><li>支持参数化；</li><li>能够支持简单的单元测试和复杂的功能测试，还可以用来做selenium/appnium等自动化测试、接口自动化测试（pytest+requests）;</li><li>pytest具有很多第三方插件，并且可以自定义扩展，比较好用的如pytest-selenium（集成selenium）、pytest-html（html测试报告生成）、pytest-rerunfailures（失败case重复执行）、pytest-xdist（多CPU分发）、allure-pytest（生成测试报告）等；</li><li>测试用例的skip和xfail处理；</li><li>可以很好的和jenkins集成；</li></ul><h2 id="pytest执行用例的规则"><a href="#pytest执行用例的规则" class="headerlink" title="pytest执行用例的规则"></a>pytest执行用例的规则</h2><ul><li>如果pytest命令行有指定目录，则从该目录中开始查找测试用例文件，如果没有指定，则从当前运行目录开始查找文件。注意，该查找是递归查找，子目录中的文件也会被查找到。</li><li>并不是能够查找到目录下的所有文件，只有符合命名规则的文件才会被查找。默认规则是以test_开头或者以_test结尾的.py文件</li><li>在测试文件中查找Test开头的类，以及类中以test_开头的方法，查找测试文件中test_开头的函数</li></ul><h2 id="自定义收集case的规则"><a href="#自定义收集case的规则" class="headerlink" title="自定义收集case的规则"></a>自定义收集case的规则</h2><ul><li>在pytest.ini文件内配置：<pre class=" language-yaml"><code class="language-yaml">python_files = 'abc_*.py'    <span class="token comment" spellcheck="true">#文件名以abc_开头</span>python_classes = 'Login*'    <span class="token comment" spellcheck="true">#类的名称以Login开头</span>python_functions = 'case*'   <span class="token comment" spellcheck="true">#方法的名称以case开头</span></code></pre></li></ul><h2 id="setup和teardown"><a href="#setup和teardown" class="headerlink" title="setup和teardown"></a>setup和teardown</h2><ul><li>模块级（setup_module/teardown_module）开始于模块始末调用，全局的</li><li>函数级（setup_function/teardown_function）只对函数用例生效，在函数始末调用（不在类中，在类外部）</li><li>类级（setup_class/teardown_class）在类始末调用</li><li>方法级（setup_method/teardown_method）在方法始末调用（在类中）</li><li>方法级（setup/teardown）在方法始末调用（在类中）</li></ul><p><strong>注意调用顺序：setup_module&gt;setup_class&gt;setup_method&gt;setup&gt;teardown&gt;teardown_method&gt;teardown_class&gt;teardown_module</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> pytest </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
